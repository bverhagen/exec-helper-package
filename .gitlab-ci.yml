image: dock0/arch

before_script:
    - pacman -Sy --noconfirm

stages:
    - prepare
    - build
    - analyze
    - verify

.pkgbuild:prepare: &pkgbuild_prepare
    script:
        - pacman -S --noconfirm --needed make sed lsb-release sudo
        - echo "nobody ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers                  # Enable sudo to work without prompting a password
        - echo Making targets= ${MAKE_TARGETS}
        - sudo -u nobody make ${MAKE_TARGETS}
    artifacts:
        expire_in: 1 day
        paths:
            - pkgbuild/build/*

.pkgbuild:build: &pkgbuild_build
    variables:
        GIT_STRATEGY: none                          # Disable git and only rely on the artifacts
    script: 
        - pacman -S --noconfirm --needed base-devel sudo
        - echo "nobody ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers                  # Enable sudo to work without prompting a password
        - echo Making targets= ${MAKE_TARGETS}
	    - cd pkgbuild/dir
        - sudo -u nobody makepkg --noconfirm --needed --syncdeps --force
    artifacts:
        expire_in: 1 day
        paths:
            - pkgbuild/build/PKGBUILD
            - pkgbuild/build/*.tar.xz

.pkgbuild:analyze: &pkgbuild_analyze
    variables:
        GIT_STRATEGY: none                          # Disable git and only rely on the artifacts
    script:
        - pacman -S --noconfirm --needed namcap
        - cd pkgbuild
        - namcap build/PKGBUILD
        - namcap build/*.tar.xz

.pkgbuild:verify: &pkgbuild_verify
    script:
        - pacman --needed --noconfirm -U pkgbuild/build/*.tar.xz
        - pacman -S --noconfirm --needed base-devel curl gcc clang make scons clang-tools-extra cppcheck git java-environment unzip wget valgrind
        - verification/run-examples.sh

pkgbuild:prepare:
    stage: prepare
    variables:
        MAKE_TARGETS: prepare
    <<: *pkgbuild_prepare

arch-linux:prepare:
    stage: prepare
    variables:
        MAKE_TARGETS: arch TARGET=prepare
    only:
        - master
    <<: *pkgbuild_prepare

arch-linux-git:prepare:
    stage: prepare
    variables:
        MAKE_TARGETS: arch TARGET=prepare-git
    <<: *pkgbuild_prepare

pkgbuild:build:
    stage: build
    dependencies:
        - pkgbuild:prepare
    variables:
        MAKE_TARGETS: ""
    <<: *pkgbuild_build

arch-linux:build:
    stage: build
    dependencies:
        - arch-linux:prepare
    variables:
        MAKE_TARGETS: arch
    only:
        - master
    <<: *pkgbuild_build

arch-linux-git:build:
    stage: build
    dependencies:
        - arch-linux-git:prepare
    variables:
        MAKE_TARGETS: arch TARGET=build-git
    <<: *pkgbuild_build

pkgbuild:analyze:
    stage: analyze
    dependencies:
        - pkgbuild:build
    <<: *pkgbuild_analyze

arch-linux:analyze:
    stage: analyze
    dependencies:
        - arch-linux:build
    only:
        - master
    <<: *pkgbuild_analyze

arch-linux-git:analyze:
    stage: analyze
    dependencies:
        - arch-linux-git:build
    <<: *pkgbuild_analyze

pkgbuild:verify:
    stage: verify
    dependencies:
        - pkgbuild:build
    <<: *pkgbuild_verify

arch-linux:verify:
    stage: verify
    dependencies:
        - arch-linux:build
    only:
        - master
    <<: *pkgbuild_verify

arch-linux-git:verify:
    stage: verify
    dependencies:
        - arch-linux-git:build
    <<: *pkgbuild_verify
