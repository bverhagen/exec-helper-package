image: dock0/arch

variables:
  GIT_SUBMODULE_STRATEGY: recursive     # Let gitlab checkout the submodules before running

stages:
    - build
    - analyze
    - verify

pkgbuild:build:
    image: dock0/arch
    stage: build
    script: 
        - pacman -Sy --noconfirm
        - pacman -S --noconfirm --needed base-devel make
        - echo "nobody ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers                  # Enable sudo to work without prompting a password
        - sudo -u nobody make pkgbuild
    artifacts:
        expire_in: 1 day
        paths:
            - pkgbuild/*.tar.xz

pkgbuild:analyze:
    image: dock0/arch
    stage: analyze
    dependencies:
        - pkgbuild:build
    script:
        - pacman -Sy --noconfirm
        - pacman -S --noconfirm --needed namcap
        - cd pkgbuild
        - namcap PKGBUILD
        - namcap *.tar.xz

pkgbuild:verify:
    image: dock0/arch
    stage: verify
    dependencies:
        - pkgbuild:build
    script:
        - pacman -Sy --noconfirm
        - pacman --needed --noconfirm -U pkgbuild/*.tar.xz
        - exec-helper --settings-file exec-helper/src/plugins/examples/command-line-command.example example

dpkg:build:
    image: ubuntu:xenial
    stage: build
    script:
        - apt-get update
        - apt-get install --assume-yes debhelper build-essential equivs devscripts sudo
        - echo "nobody ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers                  # Enable sudo to work without prompting a password
        - sudo -u nobody make ubuntu
        - mv ../*.dsc .
        - mv ../*.tar.* .
        - mv ../*.changes .
        - mv ../*.deb .
    artifacts:
        expire_in: 1 day
        paths:
            - "*.dsc"
            - "*.tar.*"
            - "*.changes"
            - "*.deb"

dpkg:analyze:
    image: ubuntu:xenial
    stage: analyze
    dependencies:
        - dpkg:build
    script:
        - mv "*.dsc" "*.tar.*" "*.changes" "*.deb" ..
        - apt-get update
        - apt-get install --assume-yes lintian
        - lintian
